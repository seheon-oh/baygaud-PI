import numpy as np
import matplotlib.pyplot as plt
import sys

params = np.array([[[ 
    4.1092979e-03, -1.3054427e-04,  4.8332840e+02,  3.6411819e+01,
    1.8141815e-01,  5.7980773e-04,  1.5213071e-04,  1.8386267e-01,
    1.7724463e-01,  7.7405293e-04,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    7.8317039e-03,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    2.0290701e+03,  7.0000000e+01,  7.1000000e+01,  5.9000000e+01,
    6.0000000e+01,  7.0000000e+01,  5.9000000e+01], 
  [ 3.3338980e-03, -1.8416339e-04,  4.8277679e+02,  3.5881683e+01,
    1.7913562e-01,  5.2492358e+02,  8.0227880e+00,  2.5777141e-02,
    4.2865856e-04,  1.1643096e-04,  1.8217234e-02,  2.7732352e-02,
    2.7225126e-04,  4.4055417e-01,  3.7430018e-01,  1.3547771e-03,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  6.2844516e-03,  0.0000000e+00,  0.0000000e+00,
    2.2046697e+03,  7.0000000e+01,  7.1000000e+01,  5.9000000e+01,
    6.0000000e+01,  7.0000000e+01,  5.9000000e+01], 
  [ 2.3779520e-03, -4.4569906e-04,  4.8280295e+02,  3.5799259e+01,
    1.7832530e-01,  5.2481787e+02,  8.1018200e+00,  2.6778307e-02,
    4.5799966e+02,  7.7929673e+00,  2.4038574e-02,  3.1426904e-04,
    8.4648847e-05,  3.0243397e-02,  7.6290718e-03,  2.6983918e-05,
    3.6136273e-01,  2.7752554e-01,  9.1788929e-04,  3.6535430e-01,
    3.0601448e-01,  9.7818254e-04,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
    0.0000000e+00,  0.0000000e+00,  3.9950623e-03,  0.0000000e+00,
    2.4983464e+03,  7.0000000e+01,  7.1000000e+01,  5.9000000e+01,
    6.0000000e+01,  7.0000000e+01,  5.9000000e+01], 
  [ 2.3706604e-03, -4.3974488e-04,  4.8282397e+02,  3.5784065e+01,
    1.7824797e-01,  5.2456781e+02,  8.0963526e+00,  2.7298136e-02,
    4.5789520e+02,  7.7510810e+00,  2.3858244e-02,  3.7752786e+02,
    7.9920822e-01,  8.9964801e-03,  2.6316705e-04,  6.2647639e-05,
    4.4991810e-02,  6.3380618e-03,  2.4985480e-05,  3.1312984e-01,
    2.0284298e-01,  6.4332609e-04,  2.7951765e-01,  2.5980860e-01,
    8.4727630e-04,  1.8410839e+01,  5.4737723e-01,  7.2242931e-04,
    0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  3.9448594e-03,
    2.5112800e+03,  7.0000000e+01,  7.1000000e+01,  5.9000000e+01,
    6.0000000e+01,  7.0000000e+01,  5.9000000e+01]]])




velocity = np.linspace(400, 600, 1000)
plt.figure(figsize=(10, 6))

colors = ['black', 'green', 'blue', 'red']
ngauss_total = 4  # 사용할 Gaussian 함수의 총 개수
block = params[0]


for tt in range(1, ngauss_total+1):
    for bb in range(tt-1, tt):
        gaussian_params = block[bb]
        background_value = gaussian_params[1]  # 배경값 추출
        total_flux = np.full_like(velocity, background_value)  # 전체 flux를 background value로 초기화

        for m in range(tt-1, tt):
            nn = 2 + (m+1) * 3
            for i in range(2, nn, 3):  # IndexError를 방지하기 위한 범위 조정
                mean = gaussian_params[i + 0]
                std_dev = gaussian_params[i + 1]
                amplitude = gaussian_params[i + 2]

                print("block:", bb, "gauss-", m,":", i, mean, std_dev, amplitude)
                # std_dev가 0이거나 amplitude가 0인 경우 해당 Gaussian 함수는 계산하지 않음
                if std_dev == 0 or amplitude == 0:
                    continue

                # "divide by zero" 경고를 방지하기 위한 조건 추가
                gaussian_flux = amplitude * np.exp(-0.5 * ((velocity - mean) / std_dev) ** 2) if std_dev != 0 else 0
                total_flux += gaussian_flux

                plt.plot(velocity, gaussian_flux, label=f'Block {bb}', color=colors[bb])
            plt.plot(velocity, total_flux, label=f'Block {bb}', color=colors[bb])

plt.title('Gaussian Fits Overplot')
plt.xlabel('Velocity (km/s)')
plt.ylabel('Flux')
plt.legend()
plt.show()

sys.exit()
